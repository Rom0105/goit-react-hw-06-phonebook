{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App/App.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","defaultProps","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","this","style","form","label","type","onChange","input","pattern","title","required","button","Component","Filter","ContactItem","onDeleteContact","li","href","a","onClick","ContactList","contacts","div","map","App","filter","addContact","newContact","normalizedName","toLowerCase","find","alert","changeFilter","filterContacts","normalizedFilter","includes","deleteContact","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredResults","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f8a855c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Tep2\",\"button\":\"ContactForm_button__VCORN\",\"input\":\"ContactForm_input__2kZeL\",\"label\":\"ContactForm_label__3vve7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__z51zB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactItem_button__1kdkz\",\"li\":\"ContactItem_li__6k-kP\",\"a\":\"ContactItem_a__3QIXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__qUeHo\",\"input\":\"Filter_input__12qEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2RbBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"ContactList_div__1Itse\"};","import PropTypes from 'prop-types';\nimport styles from '../Container/Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport style from '../ContactForm/ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      id: '',\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={style.form}>\n        <label className={style.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            className={style.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            className={style.input}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <div>\n          <button type=\"submit\" className={style.button}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport style from '../Filter/Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={style.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className={style.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import style from '../ContactItem/ContactItem.module.css';\n\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={style.li}>\n      <span>{contact.name}: </span>\n      <a href={`tel:${contact.number}`} className={style.a}>\n        {contact.number}\n      </a>\n      <button type=\"button\" onClick={() => onDeleteContact(contact.id)} className={style.button}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from '../ContactList/ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <div className={style.div}>\n      <ul>\n        {contacts.map(contact => (\n          <ContactItem contact={contact} onDeleteContact={onDeleteContact} key={contact.id} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport Container from '../Container/Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport style from '../App/App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = newContact => {\n    const normalizedName = newContact.name.toLowerCase();\n    const duplicateName = this.state.contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName,\n    );\n\n    if (duplicateName) {\n      alert(`${newContact.name} is already on contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const filteredResults = this.filterContacts();\n    return (\n      <Container>\n        <h2 className={style.title}>Phonebook</h2>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className={style.title}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={filteredResults} onDeleteContact={this.deleteContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './components/App/App.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}