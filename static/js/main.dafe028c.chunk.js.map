{"version":3,"sources":["components/App/App.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","Redux/contact-actions.js","Redux/contact-reducer.js","Redux/store.js","components/Container/Container.js","Redux/contact-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","items","createReducer","contacts","actions","state","find","contact","toLowerCase","alert","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","Container","children","className","styles","container","defaultProps","getContacts","getFilter","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","resetForm","onSubmit","event","preventDefault","style","form","label","type","value","onChange","currentTarget","input","pattern","title","required","button","Filter","e","target","ContactList","allContacts","normalizedFilter","includes","getVisibleContact","div","map","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dafe028c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__z51zB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__qUeHo\",\"input\":\"Filter_input__12qEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2RbBl\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n// import types from './contact-types';\r\n\r\nexport const addContact = createAction('contact/add', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: nanoid(5),\r\n      name: name,\r\n      number: number,\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction('contact/delete');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n\r\n// export const addContact = (text, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: nanoid(),\r\n//     name: text,\r\n//     phone: number,\r\n//   },\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const changeFilter = value => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import types from './contact-types';\r\nimport * as actions from './contact-actions';\r\nimport contacts from '../json/contacts.json';\r\n\r\nconst items = createReducer(contacts, {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    if (state.find(contact => contact.name.toLowerCase() === payload.name.toLowerCase())) {\r\n      alert(`${payload.name} is already in contacts`);\r\n      return state;\r\n    }\r\n    return [payload, ...state];\r\n  },\r\n\r\n  [actions.deleteContact]: (state, { payload }) => state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case actions.changeFilter:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contact-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import PropTypes from 'prop-types';\nimport styles from '../Container/Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\r\n};\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getContacts } from '../../Redux/contact-selectors';\nimport { addContact } from '../../Redux/contact-actions';\nimport style from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    resetForm();\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.form}>\n      <label className={style.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          className={style.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          className={style.input}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <div>\n        <button type=\"submit\" className={style.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../Redux/contact-selectors';\nimport { changeFilter } from '../../Redux/contact-actions';\nimport style from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={style.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        className={style.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../Redux/contact-actions';\nimport style from '../ContactList/ContactList.module.css';\n\nconst ContactList = () => {\n  const getVisibleContact = (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n  const contacts = useSelector(({ contacts: { items, filter } }) =>\n    getVisibleContact(items, filter),\n  );\n\n  const dispatch = useDispatch();\n  return (\n    <div className={style.div}>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={style.items}>\n            {name}:<span className={style.number}>{number}</span>\n            <button\n              className={style.button}\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import Container from '../Container/Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport style from '../App/App.module.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h2 className={style.title}>Phone book</h2>\n      <ContactForm />\n      <h2 className={style.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './Redux/store';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './components/App/App.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Tep2\",\"button\":\"ContactForm_button__VCORN\",\"input\":\"ContactForm_input__2kZeL\",\"label\":\"ContactForm_label__3vve7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"ContactList_div__1Itse\",\"items\":\"ContactList_items__1RFuq\",\"number\":\"ContactList_number___KydJ\",\"button\":\"ContactList_button__3YG5n\"};"],"sourceRoot":""}